{
"title": "【jQuery】animate、slide、fade等动画的连续触发及滞后反复执行的bug",
"index": "0",
"date" : "2016-01-09",
"tag"  : "jquery",
"content": [
"<strong>【Preface】</strong>",
"<p>因为最近要做个操作选项的呼出，然后就想到了用默认隐藏，鼠标划过的时候显示的方法。</p>",
"<p>刚开始打算添加一个class=\"active\"，直接触发mouseover（或者mouseenter）的时候add，mouseout（或者mouseleave）的时候remove，这个解决方法很简单，也很实用，但是体验上可能不是那么酷炫，即没有动画的中间过渡过程，所以就想到了用animate或者slide这些jQuery的动画，然后一开始讲真，这个插件自己写，会碰到些问题，不太好实现（毕竟js掌握的不是很到位），然后听同事讲去找找jquery，导入后直接引用就可以了。</p>",
"<br><strong>【Main Body】</strong>",
"<p>网上找了一圈，有很多插件做得很赞，而且各种浏览器下的兼容性也能解决。不过个人而言，用到的地方很少，而且又要引入外部文件（可能会影响一点加载速度），有点不划算，最后找到一个用jquery内置的slide这些动画函数，基本OK了。</p>",
"<p class=\"sub-chapter\">-- bug重现 --</p>",
"<p>原本想做个动图的，好像太麻烦了，还是上代码吧。这个问题看本文的标题就应该知道怎么回事了，如果是没接触过问题的，可以先把代码拷贝下来试一下。</p>",
"</p>以animate动画为例（head等标签，jquery等js类库已经省去）：</p>",
"<div class=\"code-container\"><code>",
"<xmp><div style=\"width:70%;margin:50px auto;height:300px;\"></xmp>",
"<xmp class=\"indent-1\"><div id=\"test\" style=\"width:900px;height:100px;border:1px solid red;overflow:hidden;\"></xmp>",
"<xmp class=\"indent-2\"><div class=\"test\" style=\"margin-left:-6em\"></xmp>",
"<xmp class=\"indent-3\"><a>测试用的文字<i class=\"fa fa-arrow-right\"></i></a></xmp>",
"<xmp class=\"indent-2\"></div></xmp>",
"<xmp class=\"indent-1\"></div></xmp>",
"<xmp></div></xmp>",
"<xmp><script></xmp>",
"<xmp class=\"indent-1\">$('#test').on('mouseover', function() {</xmp>",
"<xmp class=\"indent-2\">var $thisTest = $(this).find('div.test');</xmp>",
"<xmp class=\"indent-2\">$thisTest.css('position', 'relative');</xmp>",
"<xmp class=\"indent-2\">//  $thisTest.stop();</xmp>",
"<xmp class=\"indent-2\">$thisTest.filter(':not(:animated)').animate({marginLeft:'0'});</xmp>",
"<xmp class=\"indent-1\">})</xmp>",
"<xmp class=\"indent-1\">.on('mouseout', function() {</xmp>",
"<xmp class=\"indent-2\">var $thisTest = $(this).find('div.test');</xmp>",
"<xmp class=\"indent-2\">$thisTest.css('position', 'relative');</xmp>",
"<xmp class=\"indent-2\">//  $thisTest.stop();</xmp>",
"<xmp class=\"indent-2\">$thisTest.filter(':not(:animated)').animate({marginLeft:'-6em'});</xmp>",
"<xmp class=\"indent-1\">})</xmp>",
"<xmp></script></xmp>",
"</code></div>",
"<p>上面这份代码，是我后来百度了一下后，别人提到的另一种解决方案，但我个人感觉不是特别完美；stop()这个方法被我注释掉了，是我个人认为最完美的解决方法，至于差别我在后面提。</p>",
"<p>一开始的写法如下：</p>",
"<div class=\"code-container\"><code>",
"<xmp>$thisTest.animate({marginLeft:'0em'});</xmp>",
"<xmp>$thisTest.animate({marginLeft:'-6em'});</xmp>",
"</code></div>",
"<p>这两句代码，是没有filter()函数的，也就是最开始碰到这个bug的时候的代码的样子。</p>",
"<p>这个bug产生原因就是事件在短时间内（上一个动画未播放完），动画累积导致的（估计碰到这个问题的，回过头去看看代码都知道这个原因）。所以，解决的方法，有两个。</p>",
"<br><strong>【filter】</strong>",
"<p>一个就是用filter过滤，在动画发生前，过滤掉正在进行动画的元素，只让上一个动画已经结束的元素才能触发新的事件。</p>",
"<p>然后这就带来一个新问题了，当我把鼠标移至对应的内容上，mouseover事件触发，这个时候，在动画还未结束的时候，我再将鼠标移除对应内容区域外，mouseleave事件触发，但是因为上一个动画还未结束，所以即使触发了该事件，但预期的函数并未执行，此时预期中的“mouseleave事件触发，内容隐藏”结果便无法做到了。</p>",
"<br><strong>【stop】</strong>",
"<p>对于stop()，不管了解过没，还是再搬一遍吧。</p>",
"<div class=\"code-container\"><code>",
"<xmp>//  语法结构</xmp>",
"<xmp>$('#div').stop();//停止当前动画，继续下一个动画</xmp>",
"<xmp>$('#div').stop(true);//清除元素的所有动画</xmp>",
"<xmp>$('#div').stop(false, true);//让当前动画直接到达末状态 ，继续下一个动画</xmp>",
"<xmp>$('#div').stop(true, true);//清除元素的所有动画，让当前动画直接到达末状态</xmp>",
"</code></div>",
"<p>这个方案的思路，就是简单的：当我mouseover的时候，触发对应的动画，但是在动画还未结束的时候，我却要mouseleave，同时触发mouseleave对应的动画，这个时候我便需要停止对应元素正在进行的动画。然后，这个bug也就不存在了</p>",
"<p>最后，好像也没啥总结的，其实就是对animate、slide、fade动画函数的熟悉吧，同时再熟悉一下stop有参数无参数的区别</p>",
"<p>刚开始没想到用stop，过了一两天后，偶然看到API的时候，看到了stop，才突然有了用stop解决这个bug的设想。</p>",
"<br><p>PS：其实最无语的是，为什么刚开始的没有在百度找到呢（只怪自己一开始没输对关键字）。</p>"
]
}